server:
  port: 8763
spring:
  application:
    name: restaurants-service
  security:
    oauth2:
      client:
        registration:
          keycloak:
            scope: openid
            authorization-grant-type: authorization_code
            client-id: restaurants-service
            client-secret: MakEeNbkCiLQmCq5jYzg50nuKKnLt7fF
        provider:
          keycloak:
            issuer-uri: http://localhost:8080/realms/delivery
            user-name-attribute: preferred_username
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/realms/delivery
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
  datasource:
    url: jdbc:postgresql://localhost:5432/restaurants_db
    username: restaurantsservice
    password: restaurantsservice
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
  jpa:
    show-sql: false
    hibernate:
      ddl-auto: none
  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.yaml
eureka:
  instance:
    preferIpAddress: true
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
app:
  client:
    location-service:
      serviceId: location-service
  keycloak:
    baseUrl: http://localhost:8080/
    clientId: restaurants-service
    clientSecret: MakEeNbkCiLQmCq5jYzg50nuKKnLt7fF
    realm: delivery
logging:
  level:
    dev:
      thiagooliveira:
        delivery: DEBUG
    org:
      springframework:
        security: TRACE
openapi: 3.0.0
info:
  title: User API
  description: API for managing users
  version: 1.0.0
servers:
  - url: http://localhost:8080/v1
tags:
  - name: Users
    description: Operations related to users
paths:
  /admin/users/{id}:
    get:
      summary: Get user by ID
      description: Retrieve a user by their unique ID.
      operationId: getUserByIdAsAdmin
      tags:
        - UsersAdmin
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier of the user.
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A single user object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
  /users/{id}:
    get:
      summary: Get user by ID
      description: Retrieve a user by their unique ID.
      operationId: getUserById
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier of the user.
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A single user object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
  /users/{id}/addresses:
    parameters:
      - name: id
        in: path
        required: true
        description: Unique identifier of the user.
        schema:
          type: string
          format: uuid
    get:
      summary: Get user address
      description: Get the address of a user by their unique ID.
      operationId: getUserAddress
      tags:
        - Users
      responses:
        '200':
          description: list of address
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
    post:
      summary: Add user address
      description: Add the address of a user by their unique ID.
      operationId: postUserAddress
      tags:
        - Users
      requestBody:
        description: Address object to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAddress'
      responses:
        '201':
          description: Address successfully added with no content returned
  /users/{id}/addresses/{addressId}:
    parameters:
      - name: id
        in: path
        required: true
        description: Unique identifier of the user.
        schema:
          type: string
          format: uuid
      - name: addressId
        in: path
        required: true
        description: Unique identifier of the address.
        schema:
          type: string
          format: uuid
    patch:
      summary: Update user address
      operationId: patchUserAddress
      tags:
        - Users
      requestBody:
        description: Address object to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAddress'
      responses:
        '204':
          description: Address successfully updated.
    delete:
      summary: Delete user address
      description: Delete the address of a user by their unique ID.
      operationId: deleteUserAddress
      tags:
        - Users
      responses:
        '204':
          description: Address successfully deleted.
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the user
        firstName:
          type: string
          description: First name of the user
        lastName:
          type: string
          description: Last name of the user
        email:
          type: string
          description: Email address of the user
        address:
          $ref: '#/components/schemas/Address'
      required:
        - id
        - firstName
        - lastName
        - email
        - address
    UserWithAddressId:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the user
        firstName:
          type: string
          description: First name of the user
        lastName:
          type: string
          description: Last name of the user
        email:
          type: string
          description: Email address of the user
        currentAddressId:
          type: string
          format: uuid
          description: current address id
    Address:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier
        description:
          type: string
          description: Address description
        current:
          type: boolean
          description: Address current
        street:
          type: string
          description: Street address
        number:
          type: string
          description: Street number
        notes:
          type: string
          description: Additional notes
        city:
          type: string
          description: City
        state:
          type: string
          description: State
        postalCode:
          type: string
          description: Postal code
        country:
          type: string
          description: Country
        formatted:
          type: string
          description: formatted address
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
    UpdateAddress:
      type: object
      properties:
        current:
          type: boolean
          description: Address current
    CreateAddress:
      type: object
      properties:
        description:
          type: string
          description: Address description
        street:
          type: string
          description: Street address
        number:
          type: string
          description: Street number
        notes:
          type: string
          description: Additional notes
        city:
          type: string
          description: City
        state:
          type: string
          description: State
        postalCode:
          type: string
          description: Postal code
        country:
          type: string
          description: Country
      required:
        - description
        - current
        - street
        - number
        - city
        - state
        - postalCode
        - country
  securitySchemes:
    ClientCredentials:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: ''
          scopes: { }
security:
  - ClientCredentials: [ ]
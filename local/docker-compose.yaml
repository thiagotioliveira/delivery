version: '3.7'

services:
  postgres:
    image: bitnami/postgresql:11.6.0-debian-9-r0
    volumes:
      - .\postgres:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_DB: delivery_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"
    networks:
      - delivery_network

  keycloak:
    image: quay.io/keycloak/keycloak:23.0.6
    command: "-v start-dev --import-realm"
    environment:
      KC_HOSTNAME_URL: http://keycloak:8080
      KC_HOSTNAME_STRICT_BACKCHANNEL: false
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres/keycloak_db
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
    ports:
      - "8080:8080"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/8080;echo -e 'GET /health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n' >&3;if [ $? -eq 0 ]; then echo 'Healthcheck Successful';exit 0;else echo 'Healthcheck Failed';exit 1;fi;"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 180s
    volumes:
      - .\keycloak\delivery-realm.json:/opt/keycloak/data/import/delivery-realm.json
      - .\keycloak\delivery-users-0.json:/opt/keycloak/data/import/delivery-users-0.json
    depends_on:
      - postgres
    networks:
      - delivery_network

  rabbitmq:
    image: rabbitmq:3.13-management
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - delivery_network
  discovery:
    image: thiagotioliveira/delivery-discovery:latest
    ports:
      - "8761:8761"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8761 || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 150s
    networks:
      - delivery_network
  gateway:
    image: thiagotioliveira/delivery-gateway:latest
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery:8761/eureka/
    depends_on:
      discovery:
        condition: service_healthy
    ports:
      - "8082:8082"
    networks:
      - delivery_network
  location:
    image: thiagotioliveira/delivery-location:latest
    environment:
      APP_KEYCLOAK_BASEURL: http://keycloak:8080
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery:8761/eureka/
      SPRING_RABBITMQ_HOST: rabbitmq
    depends_on:
      keycloak:
        condition: service_healthy
    ports:
      - "8767:8767"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://discovery:8761/eureka/apps/location-service || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 120s
    networks:
      - delivery_network
  notifications:
    image: thiagotioliveira/delivery-notifications:latest
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery:8761/eureka/
      SPRING_RABBITMQ_HOST: rabbitmq
    depends_on:
      keycloak:
        condition: service_healthy
    ports:
      - "8766:8766"
    networks:
      - delivery_network
  orders:
    image: thiagotioliveira/delivery-orders:latest
    environment:
      APP_KEYCLOAK_BASEURL: http://keycloak:8080
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery:8761/eureka/
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/orders_db
    depends_on:
      keycloak:
        condition: service_healthy
    ports:
      - "8765:8765"
    networks:
      - delivery_network
  restaurants:
    image: thiagotioliveira/delivery-restaurants:latest
    environment:
      APP_KEYCLOAK_BASEURL: http://keycloak:8080
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery:8761/eureka/
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/restaurants_db
    depends_on:
      keycloak:
        condition: service_healthy
    ports:
      - "8763:8763"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://discovery:8761/eureka/apps/restaurants-service || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 120s
    networks:
      - delivery_network
  menus:
    image: thiagotioliveira/delivery-menus:latest
    environment:
      APP_KEYCLOAK_BASEURL: http://keycloak:8080
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery:8761/eureka/
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/menus_db
    depends_on:
      restaurants:
        condition: service_healthy
    ports:
      - "8764:8764"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://discovery:8761/eureka/apps/menus-service || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 120s
    networks:
      - delivery_network
  users:
    image: thiagotioliveira/delivery-users:latest
    environment:
      APP_KEYCLOAK_BASEURL: http://keycloak:8080
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery:8761/eureka/
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/users_db
    depends_on:
      location:
        condition: service_healthy
    ports:
      - "8762:8762"
    networks:
      - delivery_network
  web:
    image: thiagotioliveira/delivery-ui:latest
    environment:
      APP_KEYCLOAK_BASEURL: http://keycloak:8080
      #APP_CLIENT_GATEWAY_BASEURL: http://gateway:8082
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery:8761/eureka/
    depends_on:
      menus:
        condition: service_healthy
    ports:
      - "8081:8081"
    networks:
      - delivery_network
networks:
  delivery_network:
    driver: bridge
{
	"info": {
		"_postman_id": "eb66dc95-2bb5-4fc5-8010-8c5a0dac8104",
		"name": "Delivery API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19497979"
	},
	"item": [
		{
			"name": "Generate Token (USER)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Obter a resposta como JSON\r",
							"var jsonResponse = pm.response.json();\r",
							"\r",
							"// Obter o access_token and refresh_token\r",
							"var accessToken = jsonResponse.access_token;\r",
							"var refreshToken = jsonResponse.refresh_token;\r",
							"\r",
							"// Setar a variável 'authorization' no ambiente 'delivery-local'\r",
							"pm.environment.set(\"token\", accessToken);\r",
							"pm.environment.set(\"refreshToken\", refreshToken);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "client_id",
							"value": "delivery-ui",
							"type": "text"
						},
						{
							"key": "username",
							"value": "{{user}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{user-password}}",
							"type": "text"
						},
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{keycloakUrl}}/realms/{{realm}}/protocol/openid-connect/token",
					"host": [
						"{{keycloakUrl}}"
					],
					"path": [
						"realms",
						"{{realm}}",
						"protocol",
						"openid-connect",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Generate Token (SERVICE)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Obter a resposta como JSON\r",
							"var jsonResponse = pm.response.json();\r",
							"\r",
							"// Obter o access_token and refresh_token\r",
							"var accessToken = jsonResponse.access_token;\r",
							"var refreshToken = jsonResponse.refresh_token;\r",
							"\r",
							"// Setar a variável 'authorization' no ambiente 'delivery-local'\r",
							"pm.environment.set(\"token\", accessToken);\r",
							"pm.environment.set(\"refreshToken\", refreshToken);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "client_id",
							"value": "users-service",
							"type": "text"
						},
						{
							"key": "grant_type",
							"value": "client_credentials",
							"type": "text"
						},
						{
							"key": "client_secret",
							"value": "jftzuKCciHm8bfJ2V0bZK2qtMrXivBgA",
							"type": "text"
						},
						{
							"key": "scopes",
							"value": "profile",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{keycloakUrl}}/realms/{{realm}}/protocol/openid-connect/token",
					"host": [
						"{{keycloakUrl}}"
					],
					"path": [
						"realms",
						"{{realm}}",
						"protocol",
						"openid-connect",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Refresh Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Obter a resposta como JSON\r",
							"var jsonResponse = pm.response.json();\r",
							"\r",
							"// Obter o access_token and refresh_token\r",
							"var accessToken = jsonResponse.access_token;\r",
							"var refreshToken = jsonResponse.refresh_token;\r",
							"\r",
							"// Setar a variável 'authorization' no ambiente 'delivery-local'\r",
							"pm.environment.set(\"token\", accessToken);\r",
							"pm.environment.set(\"refreshToken\", refreshToken);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "client_id",
							"value": "delivery-ui",
							"type": "text"
						},
						{
							"key": "grant_type",
							"value": "refresh_token",
							"type": "text"
						},
						{
							"key": "refresh_token",
							"value": "{{refreshToken}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{keycloakUrl}}/realms/{{realm}}/protocol/openid-connect/token",
					"host": [
						"{{keycloakUrl}}"
					],
					"path": [
						"realms",
						"{{realm}}",
						"protocol",
						"openid-connect",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Locations API - Get Directions",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"origin\": {\r\n    \"street\": \"Rua Alexandre Herculano\",\r\n    \"number\": \"2\",\r\n    \"notes\": \"\",\r\n    \"city\": \"Lisbon\",\r\n    \"state\": \"Lisbon\",\r\n    \"postalCode\": \"1150-006\",\r\n    \"country\": \"Portugal\",\r\n    \"formatted\": \"Rua Alexandre Herculano 2, Lisbon, Lisbon, 1150-006, Portugal\",\r\n    \"latitude\": 0,\r\n    \"longitude\": 0\r\n  },\r\n  \"destination\": {\r\n    \"street\": \"Rua João de Freitas Branco\",\r\n    \"number\": \"34B\",\r\n    \"notes\": \"\",\r\n    \"city\": \"Lisbon\",\r\n    \"state\": \"Lisbon\",\r\n    \"postalCode\": \"1500-714\",\r\n    \"country\": \"Portugal\",\r\n    \"formatted\": \"Rua João de Freitas Branco 34B, Lisbon, Lisbon, 1500-714, Portugal\",\r\n    \"latitude\": 0,\r\n    \"longitude\": 0\r\n  }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8767/admin/directions",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8767",
					"path": [
						"admin",
						"directions"
					]
				}
			},
			"response": []
		},
		{
			"name": "Locations API - Validate Address",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"street\": \"Rua Alexandre Herculano\",\r\n    \"number\": \"2\",\r\n    \"notes\": \"\",\r\n    \"city\": \"Lisbon\",\r\n    \"state\": \"Lisbon\",\r\n    \"postalCode\": \"1150-006\",\r\n    \"country\": \"Portugal\",\r\n    \"formatted\": \"Rua Alexandre Herculano 2, Lisbon, Lisbon, 1150-006, Portugal\",\r\n    \"latitude\": 0,\r\n    \"longitude\": 0\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8767/admin/address/validate",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8767",
					"path": [
						"admin",
						"address",
						"validate"
					]
				}
			},
			"response": []
		},
		{
			"name": "Menus API - Get Items By RestaurantId",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8764/restaurants/{{restaurant_id}}/items",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8764",
					"path": [
						"restaurants",
						"{{restaurant_id}}",
						"items"
					]
				}
			},
			"response": []
		},
		{
			"name": "Menus API - Get Item By Id",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8764/restaurants/{{restaurant_id}}/items/{{item_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8764",
					"path": [
						"restaurants",
						"{{restaurant_id}}",
						"items",
						"{{item_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Restaurants API - Get All",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8763/restaurants",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8763",
					"path": [
						"restaurants"
					]
				}
			},
			"response": []
		},
		{
			"name": "Restaurants API - Get By Id",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8763/restaurants/{{restaurant_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8763",
					"path": [
						"restaurants",
						"{{restaurant_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Restaurants API - Get All - ADMIN",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8763/admin/restaurants",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8763",
					"path": [
						"admin",
						"restaurants"
					]
				}
			},
			"response": []
		},
		{
			"name": "Restaurants API - Get By Id - ADMIN",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8763/admin/restaurants/{{restaurant_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8763",
					"path": [
						"admin",
						"restaurants",
						"{{restaurant_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User By Id",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users-service/users/{{user_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users-service",
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Address by User By Id",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users-service/users/{{user_id}}/addresses",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users-service",
						"users",
						"{{user_id}}",
						"addresses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Creare Address To User 1",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"description\": \"home\",\r\n  \"street\": \"Rua Luciano Cordeiro\",\r\n  \"number\": \"51\",\r\n  \"notes\": \"2º andar direito\",\r\n  \"city\": \"Lisboa\",\r\n  \"state\": \"Lisboa\",\r\n  \"postalCode\": \"1150-212\",\r\n  \"country\": \"Portugal\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users-service/users/{{user_id}}/addresses",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users-service",
						"users",
						"{{user_id}}",
						"addresses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Creare Address To User 2",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"description\": \"work\",\r\n  \"street\": \"Rua João de Freitas Branco\",\r\n  \"number\": \"34B\",\r\n  \"city\": \"Lisboa\",\r\n  \"state\": \"Lisboa\",\r\n  \"postalCode\": \"1500-714\",\r\n  \"country\": \"Portugal\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users-service/users/{{user_id}}/addresses",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users-service",
						"users",
						"{{user_id}}",
						"addresses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Address To User",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/users-service/users/{{user_id}}/addresses/06e54760-8df7-4964-97b0-36e844a3fda8",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users-service",
						"users",
						"{{user_id}}",
						"addresses",
						"06e54760-8df7-4964-97b0-36e844a3fda8"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Address To User",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"current\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users-service/users/{{user_id}}/addresses/5521fa14-e429-4922-ab95-04ba2fd1c124",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users-service",
						"users",
						"{{user_id}}",
						"addresses",
						"5521fa14-e429-4922-ab95-04ba2fd1c124"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Restaurants",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/restaurants-service/restaurants",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurants-service",
						"restaurants"
					],
					"query": [
						{
							"key": "pageNumber",
							"value": "0",
							"disabled": true
						},
						{
							"key": "pageSize",
							"value": "10",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Restaurants (Admin)",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/restaurants-service/admin/restaurants",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurants-service",
						"admin",
						"restaurants"
					],
					"query": [
						{
							"key": "pageNumber",
							"value": "0",
							"disabled": true
						},
						{
							"key": "pageSize",
							"value": "10",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Restaurant By Id",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/restaurants-service/restaurants/{{restaurant_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"restaurants-service",
						"restaurants",
						"{{restaurant_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Items By RestaurantId",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/menus-service/restaurants/{{restaurant_id}}/items",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"menus-service",
						"restaurants",
						"{{restaurant_id}}",
						"items"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Item By RestaurantId And ItemId",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/menus-service/restaurants/{{restaurant_id}}/items/{{item_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"menus-service",
						"restaurants",
						"{{restaurant_id}}",
						"items",
						"{{item_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Order",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"restaurantId\": \"{{restaurant_id}}\",\r\n    \"userId\": \"{{user_id}}\",\r\n    \"total\": 12.50,\r\n    \"items\": [\r\n        {\r\n            \"id\": \"{{item_id}}\",\r\n            \"price\": 12.50,\r\n            \"amount\": 1\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/orders-service/orders",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders-service",
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Order By Id",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/orders-service/orders/48add9d4-31a6-4169-8d01-5af03dcaa297",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders-service",
						"orders",
						"48add9d4-31a6-4169-8d01-5af03dcaa297"
					]
				}
			},
			"response": []
		},
		{
			"name": "Approve Order",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/orders-service/orders/48add9d4-31a6-4169-8d01-5af03dcaa297/approve",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders-service",
						"orders",
						"48add9d4-31a6-4169-8d01-5af03dcaa297",
						"approve"
					]
				}
			},
			"response": []
		},
		{
			"name": "Deliver Order",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/orders-service/orders/48add9d4-31a6-4169-8d01-5af03dcaa297/deliver",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"orders-service",
						"orders",
						"48add9d4-31a6-4169-8d01-5af03dcaa297",
						"deliver"
					]
				}
			},
			"response": []
		}
	]
}
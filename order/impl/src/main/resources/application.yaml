server:
  port: 8765
spring:
  application:
    name: orders-service
  security:
    oauth2:
      client:
        registration:
          keycloak:
            scope: openid
            authorization-grant-type: authorization_code
            client-id: delivery-ui
        provider:
          keycloak:
            issuer-uri: http://localhost:8080/realms/delivery
            user-name-attribute: preferred_username
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/realms/delivery
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
  datasource:
    url: jdbc:postgresql://localhost:5432/orders_db
    username: ordersservice
    password: ordersservice
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
  jpa:
    show-sql: false
    hibernate:
      format_sql: false
      type: trace
      ddl-auto: none
  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.yaml
logging:
  level:
    dev:
      thiagooliveira:
        delivery: DEBUG
    org:
      hibernate:
        SQL: INFO #DEBUG
        orm:
          jdbc:
            bind: INFO #TRACE
        type:
          descriptor:
            sql:
              BasicBinder: INFO #TRACE
eureka:
  instance:
    preferIpAddress: true
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
app:
  client:
    users-service:
      serviceId: users-service
    restaurants-service:
      serviceId: restaurants-service
    menus-service:
      serviceId: menus-service
  keycloak:
    baseUrl: http://localhost:8080/
    clientId: orders-service
    clientSecret: zVw5tde4NLZV8xfujzSgZjHNlVjj0Ioy
    realm: delivery
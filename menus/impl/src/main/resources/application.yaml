server:
  port: 8764
info:
  app:
    name: ${spring.application.name}
    description: Responsible for handling data related to menu of restaurants
    version: 0.0.1-SNAPSHOT
    author: Thiago Oliveira
spring:
  application:
    name: menus-service
  security:
    oauth2:
      client:
        registration:
          keycloak:
            scope: openid
            authorization-grant-type: authorization_code
            client-id: ${app.keycloak.clientId}
            client-secret: ${app.keycloak.clientSecret}
        provider:
          keycloak:
            issuer-uri: ${app.keycloak.baseUrl}/realms/delivery
            user-name-attribute: preferred_username
      resourceserver:
        jwt:
          issuer-uri: ${app.keycloak.baseUrl}/realms/delivery
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
  datasource:
    url: jdbc:postgresql://localhost:5432/menus_db
    username: menusservice
    password: menusservice
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
  jpa:
    show-sql: false
    hibernate:
      ddl-auto: none
  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.yaml
management:
  endpoints:
    web:
      exposure:
        include: health,info
  info:
    env:
      enabled: true
    build:
      enabled: true
    git:
      enabled: true
      mode: full
    java:
      enabled: true
    os:
      enabled: true
eureka:
  instance:
    preferIpAddress: true
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
app:
  client:
    restaurants-service:
      serviceId: restaurants-service
  keycloak:
    baseUrl: http://localhost:8080
    clientId: menus-service
    clientSecret: PZim6H4TZ3nOfxCoeKaxfneoCDKqpBOl
    realm: delivery
logging:
  level:
    dev.thiagooliveira.delivery: DEBUG